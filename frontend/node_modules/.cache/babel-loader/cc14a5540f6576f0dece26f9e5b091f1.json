{"ast":null,"code":"var _jsxFileName = \"/home/dan-sampai/Desktop/Git-ReactApp/frontend/src/components/GitProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Repos from \"./Repos\";\nimport UserInfo from \"./UserInfo\";\nimport \"./UserInfo.css\";\nimport Loading from \"./Loading\";\n/**\n * GitProfile class to act as component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GitProfile = _ref => {\n  _s();\n\n  let {\n    userDetails,\n    chosenVcs\n  } = _ref;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [repoContent, setRepoContent] = useState(null);\n  const prevChosenVcsRef = useRef();\n  useEffect(() => {\n    //function to fetchthe chosen VCS repo for a user\n    const fetchRepos = async (nameGitHub, nameGitLab) => {\n      /**\n       * if chosenVCS = 0 (github), we fetch github repo, set isLoaded to true to indicate we got a response,\n       * store the response to repoContent\n       */\n      if (chosenVcs === 0) {\n        try {\n          const response = await fetch(`/github/repo/${nameGitHub}`);\n          const data = await response.json();\n          setRepoContent(data);\n          setIsLoaded(true);\n        } catch (e) {\n          console.log(e);\n        }\n        /**\n         * if chosenVCS = 1 (gitlab), we fetch gitlab repo, set isLoaded to true to indicate we got a response,\n         * store the response to repoContent\n         */\n\n      } else if (chosenVcs === 1) {\n        try {\n          const response = await fetch(`/gitlab/repo/${nameGitLab}`);\n          const data = await response.json();\n          setRepoContent(data);\n          setIsLoaded(true);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }; //the name of user on github\n\n\n    const nameGitHub = userDetails[0].login; //name of user on gitlab\n\n    const nameGitLab = userDetails[1].username;\n\n    if (chosenVcs !== prevChosenVcsRef.current) {\n      //set isLoaded to false\n      setIsLoaded(false); //fetch repos based on the new chosen VCS\n\n      fetchRepos(nameGitHub, nameGitLab);\n    }\n\n    fetchRepos(nameGitHub, nameGitLab);\n  }, [userDetails, chosenVcs]);\n  /**\n   * if not loaded yet, indicate that the repos are being fetched with message and gif\n   */\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-div \",\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n        userDetails: userDetails,\n        chosenVcs: chosenVcs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Repos on the way...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n    /**\n     * else mount the Repos component to display the repos contents\n     */\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-div\",\n      children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n        userDetails: userDetails,\n        chosenVcs: chosenVcs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repos-main-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: \"Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Repos, {\n          repoContent: repoContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(GitProfile, \"WVKTus3oj5r5CA7Qi1brvKVbYuc=\");\n\n_c = GitProfile;\nexport default GitProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"GitProfile\");","map":{"version":3,"sources":["/home/dan-sampai/Desktop/Git-ReactApp/frontend/src/components/GitProfile.js"],"names":["React","useState","useRef","useEffect","Repos","UserInfo","Loading","GitProfile","userDetails","chosenVcs","isLoaded","setIsLoaded","repoContent","setRepoContent","prevChosenVcsRef","fetchRepos","nameGitHub","nameGitLab","response","fetch","data","json","e","console","log","login","username","current","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;AACA;AACA;;;;AACA,MAAMC,UAAU,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAA+B;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMa,gBAAgB,GAAGZ,MAAM,EAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMY,UAAU,GAAG,OAAOC,UAAP,EAAmBC,UAAnB,KAAkC;AACnD;AACN;AACA;AACA;AACM,UAAIR,SAAS,KAAK,CAAlB,EAAqB;AACnB,YAAI;AACF,gBAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAeH,UAAW,EAA5B,CAA5B;AACA,gBAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAR,UAAAA,cAAc,CAACO,IAAD,CAAd;AACAT,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD,SAND,CAME,OAAOW,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AAED;AACR;AACA;AACA;;AACO,OAfD,MAeO,IAAIb,SAAS,KAAK,CAAlB,EAAqB;AAC1B,YAAI;AACF,gBAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAeF,UAAW,EAA5B,CAA5B;AACA,gBAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAR,UAAAA,cAAc,CAACO,IAAD,CAAd;AACAT,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD,SALD,CAKE,OAAOW,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;AACF,KA9BD,CAFc,CAiCd;;;AACA,UAAMN,UAAU,GAAGR,WAAW,CAAC,CAAD,CAAX,CAAeiB,KAAlC,CAlCc,CAmCd;;AACA,UAAMR,UAAU,GAAGT,WAAW,CAAC,CAAD,CAAX,CAAekB,QAAlC;;AACA,QAAIjB,SAAS,KAAKK,gBAAgB,CAACa,OAAnC,EAA4C;AAC1C;AACAhB,MAAAA,WAAW,CAAC,KAAD,CAAX,CAF0C,CAG1C;;AACAI,MAAAA,UAAU,CAACC,UAAD,EAAaC,UAAb,CAAV;AACD;;AACDF,IAAAA,UAAU,CAACC,UAAD,EAAaC,UAAb,CAAV;AACD,GA5CQ,EA4CN,CAACT,WAAD,EAAcC,SAAd,CA5CM,CAAT;AA8CA;AACF;AACA;;AACE,MAAI,CAACC,QAAL,EAAe;AACb,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAEF,WAAvB;AAAoC,QAAA,SAAS,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASA;AACJ;AACA;AACG,GAbD,MAaO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAED,WAAvB;AAAoC,QAAA,SAAS,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAI,UAAA,KAAK,EAAE;AAAEmB,YAAAA,YAAY,EAAE;AAAhB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;AACF,CAjFD;;GAAML,U;;KAAAA,U;AAmFN,eAAeA,UAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Repos from \"./Repos\";\nimport UserInfo from \"./UserInfo\";\nimport \"./UserInfo.css\";\nimport Loading from \"./Loading\";\n\n/**\n * GitProfile class to act as component\n */\nconst GitProfile = ({ userDetails, chosenVcs }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [repoContent, setRepoContent] = useState(null);\n\n  const prevChosenVcsRef = useRef();\n\n  useEffect(() => {\n    //function to fetchthe chosen VCS repo for a user\n    const fetchRepos = async (nameGitHub, nameGitLab) => {\n      /**\n       * if chosenVCS = 0 (github), we fetch github repo, set isLoaded to true to indicate we got a response,\n       * store the response to repoContent\n       */\n      if (chosenVcs === 0) {\n        try {\n          const response = await fetch(`/github/repo/${nameGitHub}`);\n          const data = await response.json();\n\n          setRepoContent(data);\n          setIsLoaded(true);\n        } catch (e) {\n          console.log(e);\n        }\n\n        /**\n         * if chosenVCS = 1 (gitlab), we fetch gitlab repo, set isLoaded to true to indicate we got a response,\n         * store the response to repoContent\n         */\n      } else if (chosenVcs === 1) {\n        try {\n          const response = await fetch(`/gitlab/repo/${nameGitLab}`);\n          const data = await response.json();\n          setRepoContent(data);\n          setIsLoaded(true);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n    //the name of user on github\n    const nameGitHub = userDetails[0].login;\n    //name of user on gitlab\n    const nameGitLab = userDetails[1].username;\n    if (chosenVcs !== prevChosenVcsRef.current) {\n      //set isLoaded to false\n      setIsLoaded(false);\n      //fetch repos based on the new chosen VCS\n      fetchRepos(nameGitHub, nameGitLab);\n    }\n    fetchRepos(nameGitHub, nameGitLab);\n  }, [userDetails, chosenVcs]);\n\n  /**\n   * if not loaded yet, indicate that the repos are being fetched with message and gif\n   */\n  if (!isLoaded) {\n    return (\n      <div className=\"profile-div \">\n        <UserInfo userDetails={userDetails} chosenVcs={chosenVcs} />\n        <div className=\"loading-block\">\n          <h2>Repos on the way...</h2>\n          <Loading />\n        </div>\n      </div>\n    );\n    /**\n     * else mount the Repos component to display the repos contents\n     */\n  } else {\n    return (\n      <div className=\"profile-div\">\n        <UserInfo userDetails={userDetails} chosenVcs={chosenVcs} />\n        <div className=\"repos-main-title\">\n          <h2 style={{ marginBottom: \"20px\" }}>Repositories</h2>\n        </div>\n        <div>\n          <Repos repoContent={repoContent} />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default GitProfile;\n"]},"metadata":{},"sourceType":"module"}