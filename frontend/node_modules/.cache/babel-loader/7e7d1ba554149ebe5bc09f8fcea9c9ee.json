{"ast":null,"code":"var _jsxFileName = \"/home/dan-sampai/Desktop/Git-ReactApp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport \"./App.css\";\nimport github from \"./gitmark.png\";\nimport gitlab from \"./gitlab1.png\";\nimport Users from \"./components/Users\";\nimport GitProfile from \"./components/GitProfile\";\nimport Loading from \"./components/Loading\";\nimport ScrollButton from \"./ScrollButton\";\n/**\n * App class to act as main component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [inputName, setInputName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n  const [chosenVcs, setChosenVcs] = useState(null);\n  const [firstLoad, setFirtstLoad] = useState(true); //handle function to monitor input value of car ID\n\n  const handleInputChange = ev => {\n    setInputName(ev.target.value);\n  };\n\n  const revealText = () => {\n    const reveals = document.querySelectorAll(\".reveal\");\n\n    for (let i = 0; i < reveals.length; i++) {\n      setTimeout(() => {\n        reveals[i].classList.add(\"active\");\n      }, 0);\n    }\n  };\n\n  const revealIcons = () => {\n    const reveals = document.querySelectorAll(\".revealIcons\");\n\n    for (let i = 0; i < reveals.length; i++) {\n      setTimeout(() => {\n        reveals[i].classList.add(\"activeIcons\");\n      }, 0);\n    }\n  }; //function to fetch users info\n\n\n  const fetchUser = async () => {\n    try {\n      const response = await fetch(\"/user/\" + inputName);\n      const data = await response.json();\n      setLoading(false);\n      setUserDetails(data);\n      setIsLoaded(true);\n      setFirtstLoad(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }; //handle function for when input form is submitted\n\n\n  const handleOnSubmit = ev => {\n    //prevent form from reloading page when submitted\n    ev.preventDefault(); //sets busy loading to true\n\n    setIsLoaded(false);\n    setUserDetails(null);\n    setChosenVcs(null);\n    setLoading(true);\n    fetchUser();\n  }; //handle function to set the chosen VCS based on the name clicked on (each name text has an ID attribute, 0 and 1)\n\n\n  const setVcs = ev => {\n    if (ev.target.className.includes(\"github\")) {\n      setChosenVcs(0);\n    } else if (ev.target.className.includes(\"gitlab\")) {\n      setChosenVcs(1);\n    }\n  };\n\n  useEffect(() => {\n    revealText();\n    revealIcons();\n  }, []);\n  /**\n   * if results haven't loaded yet, we display the search bar and main page\n   */\n\n  if (!isLoaded && firstLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"reveal\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Git\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"rgba(255, 255, 254, 0.644)\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"background-img-github revealIcons\",\n                src: github,\n                alt: \"github-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"background-img-gitlab revealIcons\",\n                src: gitlab,\n                alt: \"gitlab-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-block reveal\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"search\",\n              onSubmit: handleOnSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                onChange: ev => handleInputChange(ev),\n                name: \"input\",\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"search-btn\",\n                children: /*#__PURE__*/_jsxDEV(FaIcons.FaSearch, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcomeDiv reveal\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"Connect with \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"whiteKeyWord\",\n                children: \"Github \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 30\n              }, this), \"and \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"whiteKeyWord\",\n                children: \"Gitlab\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), \" coders\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 26\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoaded && !firstLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Git\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"rgba(255, 255, 254, 0.644)\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"background-img-github\",\n                src: github,\n                alt: \"github-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"background-img-gitlab\",\n                src: gitlab,\n                alt: \"gitlab-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-block\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"search\",\n              onSubmit: handleOnSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                onChange: ev => handleInputChange(ev),\n                name: \"input\",\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"search-btn\",\n                children: /*#__PURE__*/_jsxDEV(FaIcons.FaSearch, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 26\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n    /**\n     * else if results are loaded, we display the search bar and mainpage again, with the names found\n     * from Users component\n     */\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Git\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"rgba(255, 255, 254, 0.644)\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"background-img-github\",\n                src: github,\n                alt: \"github-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"background-img-gitlab\",\n                src: gitlab,\n                alt: \"gitlab-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-block\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"search\",\n              onSubmit: handleOnSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                onChange: ev => handleInputChange(ev),\n                name: \"input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"search-btn\",\n                children: /*#__PURE__*/_jsxDEV(FaIcons.FaSearch, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Users, {\n            userDetails: userDetails,\n            setVcs: setVcs,\n            chosenVcs: chosenVcs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), chosenVcs === null ? null : /*#__PURE__*/_jsxDEV(GitProfile, {\n            userDetails: userDetails,\n            chosenVcs: chosenVcs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(App, \"d7bNeBjbZCwnuIB/+zwkmNaO9mc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dan-sampai/Desktop/Git-ReactApp/frontend/src/App.js"],"names":["React","useState","useEffect","FaIcons","github","gitlab","Users","GitProfile","Loading","ScrollButton","App","inputName","setInputName","loading","setLoading","isLoaded","setIsLoaded","userDetails","setUserDetails","chosenVcs","setChosenVcs","firstLoad","setFirtstLoad","handleInputChange","ev","target","value","revealText","reveals","document","querySelectorAll","i","length","setTimeout","classList","add","revealIcons","fetchUser","response","fetch","data","json","e","console","log","handleOnSubmit","preventDefault","setVcs","className","includes","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport \"./App.css\";\nimport github from \"./gitmark.png\";\nimport gitlab from \"./gitlab1.png\";\nimport Users from \"./components/Users\";\nimport GitProfile from \"./components/GitProfile\";\nimport Loading from \"./components/Loading\";\nimport ScrollButton from \"./ScrollButton\";\n\n/**\n * App class to act as main component\n */\nconst App = () => {\n  const [inputName, setInputName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n  const [chosenVcs, setChosenVcs] = useState(null);\n  const [firstLoad, setFirtstLoad] = useState(true);\n\n  //handle function to monitor input value of car ID\n  const handleInputChange = (ev) => {\n    setInputName(ev.target.value);\n  };\n\n  const revealText = () => {\n    const reveals = document.querySelectorAll(\".reveal\");\n\n    for (let i = 0; i < reveals.length; i++) {\n      setTimeout(() => {\n        reveals[i].classList.add(\"active\");\n      }, 0);\n    }\n  };\n  const revealIcons = () => {\n    const reveals = document.querySelectorAll(\".revealIcons\");\n\n    for (let i = 0; i < reveals.length; i++) {\n      setTimeout(() => {\n        reveals[i].classList.add(\"activeIcons\");\n      }, 0);\n    }\n  };\n  //function to fetch users info\n  const fetchUser = async () => {\n    try {\n      const response = await fetch(\"/user/\" + inputName);\n      const data = await response.json();\n      setLoading(false);\n      setUserDetails(data);\n      setIsLoaded(true);\n      setFirtstLoad(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  //handle function for when input form is submitted\n  const handleOnSubmit = (ev) => {\n    //prevent form from reloading page when submitted\n    ev.preventDefault();\n    //sets busy loading to true\n    setIsLoaded(false);\n    setUserDetails(null);\n    setChosenVcs(null);\n    setLoading(true);\n\n    fetchUser();\n  };\n\n  //handle function to set the chosen VCS based on the name clicked on (each name text has an ID attribute, 0 and 1)\n  const setVcs = (ev) => {\n    if (ev.target.className.includes(\"github\")) {\n      setChosenVcs(0);\n    } else if (ev.target.className.includes(\"gitlab\")) {\n      setChosenVcs(1);\n    }\n  };\n\n  useEffect(() => {\n    revealText();\n    revealIcons();\n  }, []);\n\n  /**\n   * if results haven't loaded yet, we display the search bar and main page\n   */\n  if (!isLoaded && firstLoad) {\n    return (\n      <div className=\"scene\">\n        <div className=\"App\">\n          <div className=\"heading\">\n            <h1 className=\"reveal\">\n              <i>Git</i>\n              <span style={{ color: \"rgba(255, 255, 254, 0.644)\" }}>\n                <i>Book</i>\n              </span>\n            </h1>\n            <div>\n              <span>\n                <img\n                  className=\"background-img-github revealIcons\"\n                  src={github}\n                  alt=\"github-logo\"\n                />\n                <img\n                  className=\"background-img-gitlab revealIcons\"\n                  src={gitlab}\n                  alt=\"gitlab-logo\"\n                />\n              </span>\n            </div>\n          </div>\n          <div className=\"main-page\">\n            <div className=\"search-block reveal\">\n              <form className=\"search\" onSubmit={handleOnSubmit}>\n                <input\n                  type=\"text\"\n                  required\n                  onChange={(ev) => handleInputChange(ev)}\n                  name=\"input\"\n                  autoComplete=\"off\"\n                />\n                <button type=\"submit\" className=\"search-btn\">\n                  <FaIcons.FaSearch />\n                </button>\n              </form>\n            </div>\n\n            <div className=\"welcomeDiv reveal\">\n              <i>\n                Connect with <span className=\"whiteKeyWord\">Github </span>\n                and <span className=\"whiteKeyWord\">Gitlab</span> coders\n              </i>\n            </div>\n\n            <div>\n              {/**if results are being loaded display the loading animation */}\n              {loading ? <Loading /> : null}\n            </div>\n          </div>\n        </div>\n        <ScrollButton />\n      </div>\n    );\n  } else if (!isLoaded && !firstLoad) {\n    return (\n      <div className=\"scene\">\n        <div className=\"App\">\n          <div className=\"heading\">\n            <h1>\n              <i>Git</i>\n              <span style={{ color: \"rgba(255, 255, 254, 0.644)\" }}>\n                <i>Book</i>\n              </span>\n            </h1>\n            <div>\n              <span>\n                <img\n                  className=\"background-img-github\"\n                  src={github}\n                  alt=\"github-logo\"\n                />\n                <img\n                  className=\"background-img-gitlab\"\n                  src={gitlab}\n                  alt=\"gitlab-logo\"\n                />\n              </span>\n            </div>\n          </div>\n          <div className=\"main-page\">\n            <div className=\"search-block\">\n              <form className=\"search\" onSubmit={handleOnSubmit}>\n                <input\n                  type=\"text\"\n                  required\n                  onChange={(ev) => handleInputChange(ev)}\n                  name=\"input\"\n                  autoComplete=\"off\"\n                />\n                <button type=\"submit\" className=\"search-btn\">\n                  <FaIcons.FaSearch />\n                </button>\n              </form>\n            </div>\n\n            <div>\n              {/**if results are being loaded display the loading animation */}\n              {loading ? <Loading /> : null}\n            </div>\n          </div>\n        </div>\n        <ScrollButton />\n      </div>\n    );\n    /**\n     * else if results are loaded, we display the search bar and mainpage again, with the names found\n     * from Users component\n     */\n  } else {\n    return (\n      <div className=\"scene\">\n        <div className=\"App\">\n          <div className=\"heading\">\n            <h1>\n              <i>Git</i>\n              <span style={{ color: \"rgba(255, 255, 254, 0.644)\" }}>\n                <i>Book</i>\n              </span>\n            </h1>\n            <div>\n              <span>\n                <img\n                  className=\"background-img-github\"\n                  src={github}\n                  alt=\"github-logo\"\n                />\n                <img\n                  className=\"background-img-gitlab\"\n                  src={gitlab}\n                  alt=\"gitlab-logo\"\n                />\n              </span>\n            </div>\n          </div>\n          <div className=\"main-page\">\n            <div className=\"search-block\">\n              <form className=\"search\" onSubmit={handleOnSubmit}>\n                <input\n                  type=\"text\"\n                  required\n                  onChange={(ev) => handleInputChange(ev)}\n                  name=\"input\"\n                />\n                <button type=\"submit\" className=\"search-btn\">\n                  <FaIcons.FaSearch />\n                </button>\n              </form>\n            </div>\n\n            <Users\n              userDetails={userDetails}\n              setVcs={setVcs}\n              chosenVcs={chosenVcs}\n            />\n            {/**we mount the GitProfile component only if chosenVCS is 0 or 1 */}\n            {chosenVcs === null ? null : (\n              <GitProfile userDetails={userDetails} chosenVcs={chosenVcs} />\n            )}\n          </div>\n        </div>\n        <ScrollButton />\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}